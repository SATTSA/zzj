//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace ClientApp.WebServiceMessage {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSMessageSoap", Namespace="http://tempuri.org/")]
    public partial class WSMessage : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HavaUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsOnlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback OfflineOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFriendOperationCompleted;
        
        private System.Threading.SendOrPostCallback JoinGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFriendOperationCompleted;
        
        private System.Threading.SendOrPostCallback HandleFriendRequstOperationCompleted;
        
        private System.Threading.SendOrPostCallback HandleGroupRequstOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DissolveGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistTheGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFriendToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFriendFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsInGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageQunOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback MonitorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFriendListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSMessage() {
            this.Url = global::ClientApp.Properties.Settings.Default.ClientApp_WebServiceMessage_WSMessage;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HavaUserCompletedEventHandler HavaUserCompleted;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event IsOnlineCompletedEventHandler IsOnlineCompleted;
        
        /// <remarks/>
        public event OfflineCompletedEventHandler OfflineCompleted;
        
        /// <remarks/>
        public event AddFriendCompletedEventHandler AddFriendCompleted;
        
        /// <remarks/>
        public event JoinGroupCompletedEventHandler JoinGroupCompleted;
        
        /// <remarks/>
        public event RemoveFriendCompletedEventHandler RemoveFriendCompleted;
        
        /// <remarks/>
        public event HandleFriendRequstCompletedEventHandler HandleFriendRequstCompleted;
        
        /// <remarks/>
        public event HandleGroupRequstCompletedEventHandler HandleGroupRequstCompleted;
        
        /// <remarks/>
        public event CreateGroupCompletedEventHandler CreateGroupCompleted;
        
        /// <remarks/>
        public event DissolveGroupCompletedEventHandler DissolveGroupCompleted;
        
        /// <remarks/>
        public event IsExistTheGroupCompletedEventHandler IsExistTheGroupCompleted;
        
        /// <remarks/>
        public event AddFriendToGroupCompletedEventHandler AddFriendToGroupCompleted;
        
        /// <remarks/>
        public event RemoveFriendFromGroupCompletedEventHandler RemoveFriendFromGroupCompleted;
        
        /// <remarks/>
        public event IsInGroupCompletedEventHandler IsInGroupCompleted;
        
        /// <remarks/>
        public event GroupMembersCompletedEventHandler GroupMembersCompleted;
        
        /// <remarks/>
        public event SendMessageCompletedEventHandler SendMessageCompleted;
        
        /// <remarks/>
        public event SendMessageQunCompletedEventHandler SendMessageQunCompleted;
        
        /// <remarks/>
        public event SendFileCompletedEventHandler SendFileCompleted;
        
        /// <remarks/>
        public event MonitorCompletedEventHandler MonitorCompleted;
        
        /// <remarks/>
        public event GetFriendListCompletedEventHandler GetFriendListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HavaUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HavaUser(string nickname) {
            object[] results = this.Invoke("HavaUser", new object[] {
                        nickname});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HavaUserAsync(string nickname) {
            this.HavaUserAsync(nickname, null);
        }
        
        /// <remarks/>
        public void HavaUserAsync(string nickname, object userState) {
            if ((this.HavaUserOperationCompleted == null)) {
                this.HavaUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHavaUserOperationCompleted);
            }
            this.InvokeAsync("HavaUser", new object[] {
                        nickname}, this.HavaUserOperationCompleted, userState);
        }
        
        private void OnHavaUserOperationCompleted(object arg) {
            if ((this.HavaUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HavaUserCompleted(this, new HavaUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Register", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Register(string nickname, string password) {
            object[] results = this.Invoke("Register", new object[] {
                        nickname,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string nickname, string password) {
            this.RegisterAsync(nickname, password, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string nickname, string password, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        nickname,
                        password}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Login(string nickname, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        nickname,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string nickname, string password) {
            this.LoginAsync(nickname, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string nickname, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        nickname,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsOnline", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsOnline(string nickname) {
            object[] results = this.Invoke("IsOnline", new object[] {
                        nickname});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsOnlineAsync(string nickname) {
            this.IsOnlineAsync(nickname, null);
        }
        
        /// <remarks/>
        public void IsOnlineAsync(string nickname, object userState) {
            if ((this.IsOnlineOperationCompleted == null)) {
                this.IsOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsOnlineOperationCompleted);
            }
            this.InvokeAsync("IsOnline", new object[] {
                        nickname}, this.IsOnlineOperationCompleted, userState);
        }
        
        private void OnIsOnlineOperationCompleted(object arg) {
            if ((this.IsOnlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsOnlineCompleted(this, new IsOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Offline", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Offline(string nickname) {
            this.Invoke("Offline", new object[] {
                        nickname});
        }
        
        /// <remarks/>
        public void OfflineAsync(string nickname) {
            this.OfflineAsync(nickname, null);
        }
        
        /// <remarks/>
        public void OfflineAsync(string nickname, object userState) {
            if ((this.OfflineOperationCompleted == null)) {
                this.OfflineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOfflineOperationCompleted);
            }
            this.InvokeAsync("Offline", new object[] {
                        nickname}, this.OfflineOperationCompleted, userState);
        }
        
        private void OnOfflineOperationCompleted(object arg) {
            if ((this.OfflineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OfflineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddFriend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddFriend(string nickname) {
            this.Invoke("AddFriend", new object[] {
                        nickname});
        }
        
        /// <remarks/>
        public void AddFriendAsync(string nickname) {
            this.AddFriendAsync(nickname, null);
        }
        
        /// <remarks/>
        public void AddFriendAsync(string nickname, object userState) {
            if ((this.AddFriendOperationCompleted == null)) {
                this.AddFriendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFriendOperationCompleted);
            }
            this.InvokeAsync("AddFriend", new object[] {
                        nickname}, this.AddFriendOperationCompleted, userState);
        }
        
        private void OnAddFriendOperationCompleted(object arg) {
            if ((this.AddFriendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFriendCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/JoinGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void JoinGroup(string currentUsername, string groupName) {
            this.Invoke("JoinGroup", new object[] {
                        currentUsername,
                        groupName});
        }
        
        /// <remarks/>
        public void JoinGroupAsync(string currentUsername, string groupName) {
            this.JoinGroupAsync(currentUsername, groupName, null);
        }
        
        /// <remarks/>
        public void JoinGroupAsync(string currentUsername, string groupName, object userState) {
            if ((this.JoinGroupOperationCompleted == null)) {
                this.JoinGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJoinGroupOperationCompleted);
            }
            this.InvokeAsync("JoinGroup", new object[] {
                        currentUsername,
                        groupName}, this.JoinGroupOperationCompleted, userState);
        }
        
        private void OnJoinGroupOperationCompleted(object arg) {
            if ((this.JoinGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JoinGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveFriend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveFriend(string currentUsername, string friendName) {
            this.Invoke("RemoveFriend", new object[] {
                        currentUsername,
                        friendName});
        }
        
        /// <remarks/>
        public void RemoveFriendAsync(string currentUsername, string friendName) {
            this.RemoveFriendAsync(currentUsername, friendName, null);
        }
        
        /// <remarks/>
        public void RemoveFriendAsync(string currentUsername, string friendName, object userState) {
            if ((this.RemoveFriendOperationCompleted == null)) {
                this.RemoveFriendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFriendOperationCompleted);
            }
            this.InvokeAsync("RemoveFriend", new object[] {
                        currentUsername,
                        friendName}, this.RemoveFriendOperationCompleted, userState);
        }
        
        private void OnRemoveFriendOperationCompleted(object arg) {
            if ((this.RemoveFriendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFriendCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HandleFriendRequst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HandleFriendRequst(bool accept, string friend) {
            this.Invoke("HandleFriendRequst", new object[] {
                        accept,
                        friend});
        }
        
        /// <remarks/>
        public void HandleFriendRequstAsync(bool accept, string friend) {
            this.HandleFriendRequstAsync(accept, friend, null);
        }
        
        /// <remarks/>
        public void HandleFriendRequstAsync(bool accept, string friend, object userState) {
            if ((this.HandleFriendRequstOperationCompleted == null)) {
                this.HandleFriendRequstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHandleFriendRequstOperationCompleted);
            }
            this.InvokeAsync("HandleFriendRequst", new object[] {
                        accept,
                        friend}, this.HandleFriendRequstOperationCompleted, userState);
        }
        
        private void OnHandleFriendRequstOperationCompleted(object arg) {
            if ((this.HandleFriendRequstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HandleFriendRequstCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HandleGroupRequst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HandleGroupRequst(string currentUsername, bool accept, string friend, string groupName) {
            this.Invoke("HandleGroupRequst", new object[] {
                        currentUsername,
                        accept,
                        friend,
                        groupName});
        }
        
        /// <remarks/>
        public void HandleGroupRequstAsync(string currentUsername, bool accept, string friend, string groupName) {
            this.HandleGroupRequstAsync(currentUsername, accept, friend, groupName, null);
        }
        
        /// <remarks/>
        public void HandleGroupRequstAsync(string currentUsername, bool accept, string friend, string groupName, object userState) {
            if ((this.HandleGroupRequstOperationCompleted == null)) {
                this.HandleGroupRequstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHandleGroupRequstOperationCompleted);
            }
            this.InvokeAsync("HandleGroupRequst", new object[] {
                        currentUsername,
                        accept,
                        friend,
                        groupName}, this.HandleGroupRequstOperationCompleted, userState);
        }
        
        private void OnHandleGroupRequstOperationCompleted(object arg) {
            if ((this.HandleGroupRequstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HandleGroupRequstCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateGroup(string currentUsername, string groupName) {
            object[] results = this.Invoke("CreateGroup", new object[] {
                        currentUsername,
                        groupName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateGroupAsync(string currentUsername, string groupName) {
            this.CreateGroupAsync(currentUsername, groupName, null);
        }
        
        /// <remarks/>
        public void CreateGroupAsync(string currentUsername, string groupName, object userState) {
            if ((this.CreateGroupOperationCompleted == null)) {
                this.CreateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateGroupOperationCompleted);
            }
            this.InvokeAsync("CreateGroup", new object[] {
                        currentUsername,
                        groupName}, this.CreateGroupOperationCompleted, userState);
        }
        
        private void OnCreateGroupOperationCompleted(object arg) {
            if ((this.CreateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateGroupCompleted(this, new CreateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DissolveGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DissolveGroup(string currentUsername, string groupName) {
            this.Invoke("DissolveGroup", new object[] {
                        currentUsername,
                        groupName});
        }
        
        /// <remarks/>
        public void DissolveGroupAsync(string currentUsername, string groupName) {
            this.DissolveGroupAsync(currentUsername, groupName, null);
        }
        
        /// <remarks/>
        public void DissolveGroupAsync(string currentUsername, string groupName, object userState) {
            if ((this.DissolveGroupOperationCompleted == null)) {
                this.DissolveGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDissolveGroupOperationCompleted);
            }
            this.InvokeAsync("DissolveGroup", new object[] {
                        currentUsername,
                        groupName}, this.DissolveGroupOperationCompleted, userState);
        }
        
        private void OnDissolveGroupOperationCompleted(object arg) {
            if ((this.DissolveGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DissolveGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistTheGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistTheGroup(string groupName) {
            object[] results = this.Invoke("IsExistTheGroup", new object[] {
                        groupName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistTheGroupAsync(string groupName) {
            this.IsExistTheGroupAsync(groupName, null);
        }
        
        /// <remarks/>
        public void IsExistTheGroupAsync(string groupName, object userState) {
            if ((this.IsExistTheGroupOperationCompleted == null)) {
                this.IsExistTheGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistTheGroupOperationCompleted);
            }
            this.InvokeAsync("IsExistTheGroup", new object[] {
                        groupName}, this.IsExistTheGroupOperationCompleted, userState);
        }
        
        private void OnIsExistTheGroupOperationCompleted(object arg) {
            if ((this.IsExistTheGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistTheGroupCompleted(this, new IsExistTheGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddFriendToGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddFriendToGroup(string friendName, string groupName) {
            object[] results = this.Invoke("AddFriendToGroup", new object[] {
                        friendName,
                        groupName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddFriendToGroupAsync(string friendName, string groupName) {
            this.AddFriendToGroupAsync(friendName, groupName, null);
        }
        
        /// <remarks/>
        public void AddFriendToGroupAsync(string friendName, string groupName, object userState) {
            if ((this.AddFriendToGroupOperationCompleted == null)) {
                this.AddFriendToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFriendToGroupOperationCompleted);
            }
            this.InvokeAsync("AddFriendToGroup", new object[] {
                        friendName,
                        groupName}, this.AddFriendToGroupOperationCompleted, userState);
        }
        
        private void OnAddFriendToGroupOperationCompleted(object arg) {
            if ((this.AddFriendToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFriendToGroupCompleted(this, new AddFriendToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveFriendFromGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveFriendFromGroup(string friendName, string groupName) {
            object[] results = this.Invoke("RemoveFriendFromGroup", new object[] {
                        friendName,
                        groupName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFriendFromGroupAsync(string friendName, string groupName) {
            this.RemoveFriendFromGroupAsync(friendName, groupName, null);
        }
        
        /// <remarks/>
        public void RemoveFriendFromGroupAsync(string friendName, string groupName, object userState) {
            if ((this.RemoveFriendFromGroupOperationCompleted == null)) {
                this.RemoveFriendFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFriendFromGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveFriendFromGroup", new object[] {
                        friendName,
                        groupName}, this.RemoveFriendFromGroupOperationCompleted, userState);
        }
        
        private void OnRemoveFriendFromGroupOperationCompleted(object arg) {
            if ((this.RemoveFriendFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFriendFromGroupCompleted(this, new RemoveFriendFromGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsInGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GroupMembers[] IsInGroup(string currentUsername) {
            object[] results = this.Invoke("IsInGroup", new object[] {
                        currentUsername});
            return ((GroupMembers[])(results[0]));
        }
        
        /// <remarks/>
        public void IsInGroupAsync(string currentUsername) {
            this.IsInGroupAsync(currentUsername, null);
        }
        
        /// <remarks/>
        public void IsInGroupAsync(string currentUsername, object userState) {
            if ((this.IsInGroupOperationCompleted == null)) {
                this.IsInGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsInGroupOperationCompleted);
            }
            this.InvokeAsync("IsInGroup", new object[] {
                        currentUsername}, this.IsInGroupOperationCompleted, userState);
        }
        
        private void OnIsInGroupOperationCompleted(object arg) {
            if ((this.IsInGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsInGroupCompleted(this, new IsInGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GroupMembers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GroupMembers[] GroupMembers(string groupName) {
            object[] results = this.Invoke("GroupMembers", new object[] {
                        groupName});
            return ((GroupMembers[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupMembersAsync(string groupName) {
            this.GroupMembersAsync(groupName, null);
        }
        
        /// <remarks/>
        public void GroupMembersAsync(string groupName, object userState) {
            if ((this.GroupMembersOperationCompleted == null)) {
                this.GroupMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupMembersOperationCompleted);
            }
            this.InvokeAsync("GroupMembers", new object[] {
                        groupName}, this.GroupMembersOperationCompleted, userState);
        }
        
        private void OnGroupMembersOperationCompleted(object arg) {
            if ((this.GroupMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupMembersCompleted(this, new GroupMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMessage(Messages msg) {
            this.Invoke("SendMessage", new object[] {
                        msg});
        }
        
        /// <remarks/>
        public void SendMessageAsync(Messages msg) {
            this.SendMessageAsync(msg, null);
        }
        
        /// <remarks/>
        public void SendMessageAsync(Messages msg, object userState) {
            if ((this.SendMessageOperationCompleted == null)) {
                this.SendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageOperationCompleted);
            }
            this.InvokeAsync("SendMessage", new object[] {
                        msg}, this.SendMessageOperationCompleted, userState);
        }
        
        private void OnSendMessageOperationCompleted(object arg) {
            if ((this.SendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessageQun", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMessageQun(Messages msg) {
            this.Invoke("SendMessageQun", new object[] {
                        msg});
        }
        
        /// <remarks/>
        public void SendMessageQunAsync(Messages msg) {
            this.SendMessageQunAsync(msg, null);
        }
        
        /// <remarks/>
        public void SendMessageQunAsync(Messages msg, object userState) {
            if ((this.SendMessageQunOperationCompleted == null)) {
                this.SendMessageQunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageQunOperationCompleted);
            }
            this.InvokeAsync("SendMessageQun", new object[] {
                        msg}, this.SendMessageQunOperationCompleted, userState);
        }
        
        private void OnSendMessageQunOperationCompleted(object arg) {
            if ((this.SendMessageQunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageQunCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendFile(Messages msg) {
            this.Invoke("SendFile", new object[] {
                        msg});
        }
        
        /// <remarks/>
        public void SendFileAsync(Messages msg) {
            this.SendFileAsync(msg, null);
        }
        
        /// <remarks/>
        public void SendFileAsync(Messages msg, object userState) {
            if ((this.SendFileOperationCompleted == null)) {
                this.SendFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFileOperationCompleted);
            }
            this.InvokeAsync("SendFile", new object[] {
                        msg}, this.SendFileOperationCompleted, userState);
        }
        
        private void OnSendFileOperationCompleted(object arg) {
            if ((this.SendFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Monitor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Messages[] Monitor() {
            object[] results = this.Invoke("Monitor", new object[0]);
            return ((Messages[])(results[0]));
        }
        
        /// <remarks/>
        public void MonitorAsync() {
            this.MonitorAsync(null);
        }
        
        /// <remarks/>
        public void MonitorAsync(object userState) {
            if ((this.MonitorOperationCompleted == null)) {
                this.MonitorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMonitorOperationCompleted);
            }
            this.InvokeAsync("Monitor", new object[0], this.MonitorOperationCompleted, userState);
        }
        
        private void OnMonitorOperationCompleted(object arg) {
            if ((this.MonitorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MonitorCompleted(this, new MonitorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFriendList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Friends[] GetFriendList() {
            object[] results = this.Invoke("GetFriendList", new object[0]);
            return ((Friends[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFriendListAsync() {
            this.GetFriendListAsync(null);
        }
        
        /// <remarks/>
        public void GetFriendListAsync(object userState) {
            if ((this.GetFriendListOperationCompleted == null)) {
                this.GetFriendListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFriendListOperationCompleted);
            }
            this.InvokeAsync("GetFriendList", new object[0], this.GetFriendListOperationCompleted, userState);
        }
        
        private void OnGetFriendListOperationCompleted(object arg) {
            if ((this.GetFriendListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFriendListCompleted(this, new GetFriendListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GroupMembers {
        
        private string groupNameField;
        
        private string groupMemberField;
        
        private bool isPassField;
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupMember {
            get {
                return this.groupMemberField;
            }
            set {
                this.groupMemberField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPass {
            get {
                return this.isPassField;
            }
            set {
                this.isPassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Friends {
        
        private int idField;
        
        private string userNameField;
        
        private string friendNameField;
        
        private System.Nullable<bool> isPassField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string FriendName {
            get {
                return this.friendNameField;
            }
            set {
                this.friendNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsPass {
            get {
                return this.isPassField;
            }
            set {
                this.isPassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Messages {
        
        private int idField;
        
        private System.Nullable<int> classifyField;
        
        private string senderField;
        
        private string receiverField;
        
        private string detailsField;
        
        private string fileFullNameField;
        
        private System.Nullable<System.DateTime> sendTimeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Classify {
            get {
                return this.classifyField;
            }
            set {
                this.classifyField = value;
            }
        }
        
        /// <remarks/>
        public string Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public string Receiver {
            get {
                return this.receiverField;
            }
            set {
                this.receiverField = value;
            }
        }
        
        /// <remarks/>
        public string Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public string FileFullName {
            get {
                return this.fileFullNameField;
            }
            set {
                this.fileFullNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SendTime {
            get {
                return this.sendTimeField;
            }
            set {
                this.sendTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HavaUserCompletedEventHandler(object sender, HavaUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HavaUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HavaUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IsOnlineCompletedEventHandler(object sender, IsOnlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsOnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsOnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void OfflineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddFriendCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void JoinGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RemoveFriendCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HandleFriendRequstCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HandleGroupRequstCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CreateGroupCompletedEventHandler(object sender, CreateGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DissolveGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IsExistTheGroupCompletedEventHandler(object sender, IsExistTheGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistTheGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistTheGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddFriendToGroupCompletedEventHandler(object sender, AddFriendToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFriendToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFriendToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RemoveFriendFromGroupCompletedEventHandler(object sender, RemoveFriendFromGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFriendFromGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFriendFromGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IsInGroupCompletedEventHandler(object sender, IsInGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsInGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsInGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GroupMembers[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GroupMembers[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GroupMembersCompletedEventHandler(object sender, GroupMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GroupMembers[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GroupMembers[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SendMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SendMessageQunCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SendFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MonitorCompletedEventHandler(object sender, MonitorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MonitorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MonitorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Messages[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Messages[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetFriendListCompletedEventHandler(object sender, GetFriendListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFriendListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFriendListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Friends[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Friends[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591